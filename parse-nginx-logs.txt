Дано:

Веб-сервер Nginx пишет логи запросов в /var/log/nginx/access.log. Этот лог файл каждый день ротируется, 
так что за несколько дней в директории /var/log/nginx мы имеем несколько файлов:

/var/log/nginx/access.log		  # за текущий день
/var/log/nginx/access.log.1		# за вчера
/var/log/nginx/access.log.2		# за позавчера
/var/log/nginx/access.log.3		# за поза-позавчера
и т.д.

Nginx настроен так, что ротация лог файла происходит каждый день в полночь, при этом нет гарантии, что 
размеры лог файлов будет совпадать (если вчера запросов на веб-сервер было больше чем сегодня, то лог 
файл за вчера будет больше по размеру, чем лог файл за сегодня).

Требуется:

1) Написать программу, которая будет парсить лог файлы запросов (access.log, access.log.*) в директории /var/log/nginx, 
находить в них строки по заданной маске (например, если маска "favicon.ico" - то парсер должен достать все строки, в 
которых присутствует "favicon.com"). Найденные строки должны записываться в файл /var/log/nginx/parsed/lines.txt, но 
размер этого файла не должен превышать 200Мб. Если размер файла стал равным 200Мб, то файл должен быть ротирован в 
/var/log/nginx/parsed/lines.txt.1, и при этом создан новый пустой файл /var/log/nginx/parsed/lines.txt в который следует 
продолжать запись найденных строк. При следующем достижении размера файла 200Мб - должна опять произойти ротация, но 
уже в файл /var/log/nginx/parsed/lines.txt.2 и т.д.

2) Проанализоровать написанное решение, найти в нем потенциально проблемные места (места, где программа может падать или 
работать некорректно, при каких-то внешних условиях). Объяснить, почему найденное место является потенциально проблемным. 
Предложить варианты улучшения/исправления найденных мест.

3) Проанализировать написанное решение на предмет быстродействия (производительности). Найти потенциальные узкие места, 
влияющие на производительность. Объяснить, почему найденное место является проблемным с точки зрения производительности. 
Предложить варианты изменения найденных мест, чтобы получить максимальную производительность, при запуске в на том же компьютере.
